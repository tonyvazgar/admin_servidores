# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
# Vagrant.configure("2") do |config|
#   # The most common configuration options are documented and commented below.
#   # For a complete reference, please see the online documentation at
#   # https://docs.vagrantup.com.

#   # Every Vagrant development environment requires a box. You can search for
#   # boxes at https://vagrantcloud.com/search.
#   config.vm.box = "ubuntu/bionic64"

#   # Disable automatic box update checking. If you disable this, then
#   # boxes will only be checked for updates when the user runs
#   # `vagrant box outdated`. This is not recommended.
#   # config.vm.box_check_update = false

#   # Create a forwarded port mapping which allows access to a specific port
#   # within the machine from a port on the host machine. In the example below,
#   # accessing "localhost:8080" will access port 80 on the guest machine.
#   # NOTE: This will enable public access to the opened port
#   # config.vm.network "forwarded_port", guest: 80, host: 8080

#   # Create a forwarded port mapping which allows access to a specific port
#   # within the machine from a port on the host machine and only allow access
#   # via 127.0.0.1 to disable public access
#   # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

#   # Create a private network, which allows host-only access to the machine
#   # using a specific IP.
#   # config.vm.network "private_network", ip: "192.168.33.10"

#   # Create a public network, which generally matched to bridged network.
#   # Bridged networks make the machine appear as another physical device on
#   # your network.
#   # config.vm.network "public_network"

#   # Share an additional folder to the guest VM. The first argument is
#   # the path on the host to the actual folder. The second argument is
#   # the path on the guest to mount the folder. And the optional third
#   # argument is a set of non-required options.
#   # config.vm.synced_folder "../data", "/vagrant_data"

#   # Provider-specific configuration so you can fine-tune various
#   # backing providers for Vagrant. These expose provider-specific options.
#   # Example for VirtualBox:
#   #
#   # config.vm.provider "virtualbox" do |vb|
#   #   # Display the VirtualBox GUI when booting the machine
#   #   vb.gui = true
#   #
#   #   # Customize the amount of memory on the VM:
#   #   vb.memory = "1024"
#   # end
#   #
#   # View the documentation for the provider you are using for more
#   # information on available options.

#   # Enable provisioning with a shell script. Additional provisioners such as
#   # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
#   # documentation for more information about their specific syntax and use.
#   # config.vm.provision "shell", inline: <<-SHELL
#   #   apt-get update
#   #   apt-get install -y apache2
#   # SHELL
# end


Vagrant.configure("2") do |config|

  config.vm.define "server" do |web|
    web.vm.box = "ubuntu/bionic64"
    web.vm.network "private_network", ip: "192.168.0.10"
    web.vm.network "forwarded_port", guest: 3000, host: 3000
    web.vm.provision "shell", inline: <<-SHELL
        echo "server" > /etc/hostname
        hostname -b server
        echo "192.168.0.20        client" >> /etc/hosts
        echo "***> sudo apt-get update"; sudo apt-get update
        echo "***> sudo apt-get install -y nodejs"; sudo apt-get install -y nodejs
        echo "***> sudo apt-get install -y npm"; sudo apt-get install -y npm
        echo "***> sudo apt-get install -y git"; sudo apt-get install -y git
        echo "***> git clone https://github.com/tonyvazgar/Cloud-based-Clock.git"; git clone https://github.com/tonyvazgar/Cloud-based-Clock.git
        echo "***> cd Cloud-based-Clock/server"; cd Cloud-based-Clock/server
        echo "***> rm *.json"; rm *.json
        echo "***> node app.js"; node app.js &
    SHELL
  end

  config.vm.define "client" do |clock|
    clock.vm.box = "ubuntu/bionic64"
    clock.vm.network "private_network", ip: "192.168.0.20"
    clock.vm.network "forwarded_port", guest: 80, host: 80
    clock.vm.provision "shell", inline: <<-SHELL
        echo "client" > /etc/hostname
        hostname -b client
        echo "192.168.0.10        server" >> /etc/hosts
        echo "***sudo apt-get update***"; sudo apt-get update
        echo "***sudo apt-get install -y apache2"; sudo apt-get install -y apache2
        echo "***sudo apt-get install -y git***"; sudo apt-get install -y git
        echo "***git clone https://github.com/tonyvazgar/Cloud-based-Clock.git***"; git clone https://github.com/tonyvazgar/Cloud-based-Clock.git
        echo "***rm Cloud-based-Clock/server/*.js***"; rm Cloud-based-Clock/server/*.js
        echo "--> curl http://192.168.0.10:3000";  curl http://192.168.0.10:3000
        sudo cp -a Cloud-based-Clock/client/* /var/www/html
    SHELL
  end

end